C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN music.OBJ
COMPILER INVOKED BY: D:\Applications\Keil\C51\BIN\C51.EXE music.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg51.h>//51µ¥Æ¬»ú±à³ÌĞèÒªµÄ¿â 
   2          #include <intrins.h>//_nop_ÑÓÊ±º¯ÊıĞèÒª¸Ã¿â 
   3          #include <stdio.h>
   4          #include <stdlib.h>
   5          #include <string.h> //ºóÃæ×Ö·û´®º¯ÊıÖĞÈ¡µÃÊı×éµÄ¸öÊıÖĞÓÃµ½;µ÷ÓÃstrlenº¯Êı
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          
   9          uchar code song_tone[]= // ÉúÈÕ¿ìÀÖ¸èµÄÒô·ûÆµÂÊ±í£¬²»Í¬ÆµÂÊÓÉ²»Í¬µÄÑÓÊ±À´¾ö¶¨ 
  10          {
  11            212,212,190,212,159,169,212,212,190,212,142,159,212,212,106,126,129,169,190,119,119,126,159,142,159,0
  12          };
  13          uchar code song_long[]= // ÉúÈÕ¿ìÀÖ¸è½ÚÅÄ±í£¬½ÚÅÄ¾ö¶¨Ã¿¸öÒô·ûµÄÑİ×à³¤¶Ì
  14          {
  15            9,3,12,12,12,24,9,3,12,12,12,24,9,3,12,12,12,12,12,9,3,12,12,12,24,0
  16          };
  17          
  18          uint code row11[22] = {0,1,1,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,1,0,0,1};
  19          uint code row22[22] = {1,0,1,0,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,1,1,0};
  20          uint code row33[22] = {0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,1,1};
  21          uint code row44[22] = {1,1,1,0,0,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1};
  22          uint code answers[22] = {5,9,15,10,6,10,11,6,15,2,3,5,6,11,13,11,9,5,13,5,7,11};
  23            
  24          uint num;
  25          uint interval;
  26          uchar i;
  27          
  28          
  29          //ÖØĞÂ¶¨Òå¸÷¸ö¿ØÖÆÒı½ÅµÄÃû³Æ,  sbit ÒâË¼Îª<ÖØ¶¨Òå>,,²»Òª¸ú bit ¸ã»ì,bitÊÇ»ã±àÖĞ "Î»"
  30          
  31          sbit lcdrs = P1^1;         //ÖØ¶¨Òå,rsµçÆ½Îª1Ôò´«ËÍÊı¾İ,Îª0Ôò×ªËÍÖ¸Áî
  32          sbit lcdrw = P1^2;        //¿ØÖÆLCD¶Á»òÕßĞ´;Îª1Ôò¶ÁLCD,Îª0ÔòĞ´ÈëLCD
  33          sbit lcden = P1^3;        //LCDĞĞ¶¯¿ØÖÆ,ENÎªÏÂ½µÑØÔò½»»¥Ö´ĞĞ,¼´EN = 1;¸ú×ÅEN = 0;
  34            
  35          
  36          //¶ÌÔİÑÓÊ±º¯Êı
  37          void delay_ms(uint z) 
  38          { 
  39   1        uchar x,y;
  40   1         for(x=z;x>0;x--)
  41   1          for(y=124;y>0;y--);
  42   1      }
  43          
  44          //********************************************¶ÁÃ¦×Ó³ÌĞò*************
  45          // ¶ÁÃ¦×Ö³ÌĞò,ÓÃÓÚÅĞ¶ÏLCDÒº¾§ÊÇ·ñÃ¦×´Ì¬.Èç¹û²»½øĞĞÅĞ¶Ï¿ÉÄÜ»áµ¼ÖÂÊı¾İĞ´ÈëLCDÊ§°Ü.
  46          
  47          void dbusy()                  //ÎŞ·µ»ØÖµ º¯ÊıÃû (¿Õ)
  48          {
  49   1           P0 = 0xff;                //°Ñ0xff·¢ËÍ¸øLCDµÄÊı¾İ×ÜÏß
  50   1           lcdrs = 0;               //Ñ¡Ö¸Áî
  51   1           lcdrw = 1;               //Ñ¡Ôñ¶Á
  52   1           lcden = 1;               //Ê¹ÄÜ¶ËÖÃ1(¸ßµçÆ½)
  53   1           while (P0 & 0x80);    //Ñ­»· (Èç¹ûP0ºÍ0x80ÏàµÈµÄ»°) P0 & 0x80ÏàÓë,¼´P0×ÜÏßµÄ8Î»¶ş½øÖÆÊıÓë10000000±È½Ï
             -,
  54   1                                     //È«²¿ÏàÍ¬Ôò½á¹ûÎª 1<Õæ>;Ã¦×´Ì¬³ÉÁ¢,³ÌĞòÔÚ´Ë´¦ËÀÑ­»·ÏàÓë
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 2   

  55   1           lcden = 0;               //Ê¹ÄÜ¶ËÖÃ0(µÍµçÆ½)
  56   1      }
  57          /**************************************************************************************/
  58          
  59          /***********************************************Ğ´Êı¾İ»òÖ¸Áî×Ó³ÌĞò*******************/
  60          void tcmddata (int x, unsigned char  DATA)//ÎŞ·µ»ØÖµ º¯ÊıÃû (¶¨ÒåÕûĞÎ±äÁ¿ x, ¶¨Òå×Ö·ûĞÍ±äÁ¿ DATA)
  61          {
  62   1         dbusy();
  63   1         delay_ms(50);              //¶ÁÃ¦×Ó³ÌĞò
  64   1         P0 = DATA;      //Èç¹û²»Ã¦,Ôò°Ñ²ÎÊı DDATA »ñÈ¡µ½µÄ±äÁ¿¸³Öµ¸ø ×ÜÏß<P0>
  65   1         lcdrw = 0;      //¶ÁĞ´¶ËÑ¡ÔñÎª Ğ´<0>
  66   1         lcdrs = x;      //Êı¾İ»òÖ¸Áî¶ËÑ¡ÔñÎª²ÎÊı <x>µÄÖµ, xµÄÖµÎª0»òÕß1;Îª0±íÊ¾×ÜÏß´«ÊäµÄÊÇ¿ØÖÆLCDÖ¸Áî,Îª1±íÊ¾Ò
             -ªÏÔÊ¾µÄÊı¾İ
  67   1         lcden = 1;      //Ê¹ÄÜ¶ËÖÃ1
  68   1         lcden = 0;      //Ê¹ÄÜ¶ËÖÃ0; ½ÓÉÏÒ»ÌõÖ¸ÁîĞÎ³ÉÒ»¸öÏÂ½µÑØ,LCDÊ¶±ğµ½ÏÂ½µÑØĞÅºÅÔò¶ÁÈ¡×ÜÏßÄÚÈİ
  69   1      }
  70          /**************************************************************************************/
  71          //
  72          /************************************************LCD³õÊ¼»¯º¯Êı******************/
  73          void lcd_init()            //ÎŞ·µ»ØÖµ º¯ÊıÃû (¿Õ)£¬ÕâÀï2004µÄ³õÊ¼»¯ºÍ1602µÄ³õÊ¼»¯Ö¸ÁîÍêÈ«ÏàÍ¬ 
  74          {
  75   1         lcden=0;           //Ê¹ÄÜ¶ËENÇåÁã£¬ÒòÎªÉÏµçÊÇÄ¬ÈÏ¸ßµçÆ½£¬ËùÒÔÏÈÇåÁã
  76   1           
  77   1         //ÏÔÊ¾Ä£Ê½ÉèÖÃ
  78   1        tcmddata(0, 0x38);  //º¯ÊıÃû (Ö¸Áî, Ö¸ÁîÄÚÈİ)  //  0·¢ËÍ¸øtcmddataº¯ÊıÖĞµÄx,ÔÙ¾­tcmddataº¯Êı·¢ËÍ¸ørs,¼´r
             -s=0´ú±í´ËÊ±ÉèÖÃÎªÃüÁî·½Ê½;0x38ÎªÃüÁîÄÚÈİ
  79   1                            //0x38  ¶Ô1602ÉèÖÃ16*2£¬¶Ô2004¾Í´ú±í16*4ÏÔÊ¾£»5*7µãÕó£»8Î»Êı¾İ½Ó¿Ú
  80   1         //ÏÔÊ¾¿ª¹Ø¼°¹â±êÉèÖÃ
  81   1        tcmddata(0, 0x08);  //0ÉèÖÃÃüÁî·½Ê½£¬0x08  ±íÊ¾Ö»¿ªÏÔÊ¾
  82   1         //Êı¾İ¿ØÖÆÉèÖÃ
  83   1        tcmddata(0, 0x06); //0ÉèÖÃÃüÁî·½Ê½£¬0x06  ±íÊ¾µ±Ğ´ÈëÒ»¸ö×Ö·ûµÄÊı¾İºó£¬µØÖ·Ö¸Õë×Ô¶¯¼Ó1£¬ÇÒ¹â±êÓÒÒÆ£¬×Ö·û²
             -»¶¯
  84   1      
  85   1        tcmddata(0, 0x0c);  //0ÉèÖÃÃüÁî·½Ê½£¬0x0c  ±íÊ¾¿ªÏÔÊ¾£¬²»ÏÔÊ¾¹â±ê
  86   1        
  87   1        
  88   1        
  89   1        
  90   1        tcmddata(0, 0x01);
  91   1      }
  92          /*************************************************************************************/
  93          
  94           
  95          /**********************¶¨ÒåÏÔÊ¾Î»ÖÃ*******************************************************************/
  96          void set_xy(uchar x,uchar y)
  97          {  
  98   1         switch(x)
  99   1         {
 100   2          case 1: y = y + 0x80;break;
 101   2        case 2: y = y + 0xc0;break;
 102   2        case 3: y = y + 0x94;break;
 103   2        case 4: y = y + 0xd4;break;
 104   2        default: y = y + 0x80;//
 105   2         }
 106   1         tcmddata(0,y);//0ÉèÖÃÃüÁî·½Ê½£¬¹æ¶¨ÏÔÊ¾ÆğÊ¼µÄĞĞÁĞ£¬xĞĞ£¬yÁĞ 
 107   1      
 108   1      }
 109          
 110          /**********************ÏÔÊ¾º¯Êı***********************************************************************/
 111          
 112          void display(uchar x,uchar y,uchar *s)
 113          {          
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 3   

 114   1          set_xy(x,y); 
 115   1          while(*s)   //¶ÔÓÚÒ»¸ö²»¶¨³¤µÄ×Ö·û´®½øĞĞÏÔÊ¾  
 116   1          {
 117   2           P0=*s;
 118   2         tcmddata(1,*s);
 119   2         s++;
 120   2          }
 121   1      }
 122          
 123          
 124          sbit beep  = P1^0;//·äÃùÆ÷½ÓP1O[0]
 125          
 126          unsigned int FTemp;//´æ´¢µ±Ç°°´ÏÂµç×ÓÇÙ¼ü¶ÔÓ¦ÆµÂÊµÄ±äÁ¿ 
 127          unsigned char Timer0_H,Timer0_L,Time;//Timer0_HÓëTimer0_L¹²Í¬´æ´¢µ±Ç°²¥·ÅÒô·û¶ÔÓ¦µÄÆµÂÊ,Time´æ´¢µ±Ç°Òô·ûµÄ
             -Òô³¤ 
 128          
 129          
 130          
 131          unsigned int code tab[] = {//4*4¼üÅÌ¶ÔÓ¦µÄÒôµÄÔ¤ÖÃÊı(16Î») ¼ªËû1234ÏÒ¿ÕÏÒ+Ç°ÈıÆ· 
 132            64684,64898,65030,65157,//D, G, B, E
 133            64732,64934,65058,65178,//bE, #G, C, F
 134            64777,64968,65085,65198,//E, A, #C, #F
 135            64820,64994,65110,65217 //F, bB, D, G
 136          };
 137          
 138          
 139          unsigned char Keyscan(void){//¶ÁÈ¡µ±Ç°¼üÅÌ±»°´ÏÂµÄ¼ü,·µ»ØÖµÎª¼üµÄºÅÂë(0~15),Ã»ÓĞ¼ü°´ÏÂ·µ»Ø16 
 140   1        unsigned char i, j, temp, Buffer[4] = {0xfe, 0xfd, 0xfb, 0xf7};
 141   1          for(j = 0; j < 4; j++){
 142   2            P3 = Buffer[j];
 143   2            _nop_();
 144   2            temp = 0x80; 
 145   2            for(i = 0; i < 4; i++){
 146   3              if(!(P3 & temp)){
 147   4                return (i + j * 4);//iÊÇĞĞºÅ,jÊÇÁĞºÅ,¶Ô±È°´¼üµÄĞĞ¡¢ÁĞµØÖ·£¬È·¶¨°´ÏÂ¼üµÄĞĞºÍÁĞ 
 148   4              }
 149   3              temp >>= 1;
 150   3            } 
 151   2            
 152   2          }
 153   1        return 16;//Èç¹ûÃ»ÓĞ¼ü°´ÏÂ£¬·µ»Ø16 
 154   1      }
 155          // ²¥·Åº¯Êı
 156          void playmusic()  
 157          {
 158   1        uint i =0,j,k;
 159   1        while(song_long[i]!=0||song_tone[i]!=0) //ÅĞ¶ÏÊÇ·ñÊ±³¤»òÕßÒô·û³¤¶ÈÎª0£¬Îª0¸èÇú¼´½áÊø
 160   1        {
 161   2          for(j=0;j<song_long[i]*20;j++) //Ê±³¤¼°Òô·û³¤¶È²»Îª0Ê±£¬ÖğÒ»²¥·Å¸÷¸öÒô·û£¬song_long ÎªÅÄ×Ó³¤¶È£¬ÕâÀï20Î
             -ªÑÓÊ±±¶Êı£¬ĞŞ¸ÄÕâ¸öÖµ¿É¼Ó¿ì»ò¼õ»ºÒôÀÖµÄ²¥·ÅËÙ¶È
 162   2          {                //song_longÎªÅÄ×Ó³¤¶È,Ò»¸ö½ÚÅÄ´ó¸ÅÎª 400ms-500ms£¬ÕâÀïµÄ½ÚÅÄÓÖÊÜÏÂÃæÒ»¸öÒô·ûµÄÓ°Ïì£¬ËùÒÔÖ»ÄÜ¸
             -ù¾İ´ó¸ÅµÄÀ´È¡Öµ
 163   3            if(Keyscan()==0)return;
 164   3            beep = ~beep; //µçÆ½·­×ªµÄÆµÂÊ»á²úÉú³ö²»Í¬µÄÒôµ÷µÄ²¥·ÅĞ§¹û
 165   3            for(k=0;k<song_tone[i]/5;k++); //ÕâÀïµÄ3ÎªÆµÂÊÔö¼õµ÷½Ú£¬ĞŞ¸Ä¸ÃÖµ»áÕûÌåµ÷¸ß»òÕß½µµÍÒôµ÷£¬µ«½µµÍ¸ÃÖµÊ±£¬Ó
             -¦ÊÊµ±¼Ó´ó½ÚÅÄÑÓÊ±£¬·´Ö®Ó¦ÊÊµ±½«½ÚÅÄÑÓÊ±µ÷Ğ¡
 166   3          }
 167   2          delay_ms(10);
 168   2          i++;
 169   2        }
 170   1      }
 171          
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 4   

 172          void DelayUs2x(unsigned char t){//ÑÓÊ±2tus 
 173   1        while(--t);
 174   1      }
 175          
 176          void DelayMs(unsigned char t){//ÑÓÊ±tms 
 177   1        while(t--){
 178   2          DelayUs2x(245);
 179   2          DelayUs2x(245);
 180   2        }
 181   1      }
 182          
 183          void delay(unsigned char t){//ÑÓÊ±0.25ts 
 184   1        unsigned char i;
 185   1        for(i=0;i<t;i++){
 186   2          DelayMs(250);
 187   2        }
 188   1        TR0=0;
 189   1      }
 190          
 191          void Song(){//ÒôÀÖ²¥·Å 
 192   1        TH0=Timer0_H;
 193   1        TL0=Timer0_L;
 194   1        TR0=1;
 195   1        delay(Time);//²¥·ÅÒ»¸öTime±¶°Ë·ÖÒô·ûÊ±³¤µÄÒô 
 196   1      }
 197          
 198          
 199          
 200          
 201          
 202          void main(void){
 203   1      
 204   1        unsigned char Key_Value = 16, Key_Temp1 = 16, Key_Temp2 = 16;//Ä¬ÈÏKey_ValueÎª16(¼üÅÌÎ´°´ÏÂ),Key_Temp1´æ·
             -Å4*4¼üÅÌ°´¼üµÄÎ»ÖÃ,Key_Temp2×÷Ğ£ÑéÓÃ 
 205   1      
 206   1        int persent_beat = -2;
 207   1        int score = 0;
 208   1        int ii;
 209   1        int present_row;
 210   1        int correct;
 211   1        char printstr[5];
 212   1        char printstr1[10];
 213   1        char printstr2[10];
 214   1        int is_playing = 0; 
 215   1      
 216   1        TMOD |= 0x11;//¹¤×÷Ä£Ê½¸³ÖµÎª00010001,Ç°4Î»±íÊ¾¶¨Ê±Æ÷1¹¤×÷,ºóËÄÎ»±íÊ¾¶¨Ê±Æ÷0¹¤×÷ 
 217   1        EA  = 1;//ÔÊĞíÖĞ¶Ï 
 218   1        ET0 = 1;//¶¨Ê±Æ÷0ÔÊĞíÖĞ¶Ï 
 219   1        IT0 = 1;//¸ßµçÆ½´¥·¢ 
 220   1        ET1 = 1;//¶¨Ê±Æ÷1ÔÊĞíÖĞ¶Ï
 221   1        
 222   1        
 223   1        
 224   1        
 225   1        
 226   1        
 227   1        lcd_init();//³õÊ¼»¯
 228   1        
 229   1      
 230   1        
 231   1        while(1){//Ñ­»·Ö´ĞĞ 
 232   2          lcd_init();
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 5   

 233   2          
 234   2          
 235   2          if (persent_beat > 0 && persent_beat % interval == 0){
 236   3            if (Key_Value == answers[persent_beat/interval-1]){
 237   4                        correct = 1;
 238   4                  }
 239   3                if (correct == 0){
 240   4                    display(1,0,"F");
 241   4                  }
 242   3                  else if (correct == 1 && Key_Value != 16){
 243   4                    display(1,0,"T");
 244   4                    score += 1;
 245   4                  }
 246   3          }
 247   2          
 248   2          
 249   2      
 250   2      
 251   2            if (is_playing == 0) {
 252   3              display(1,0,"Binary Game");
 253   3              display(2,0,"1 for easy");
 254   3              display(3,0,"2 for medium");
 255   3              display(4,0,"3 for difficult");
 256   3              while(Key_Temp1 == 16){//Èç¹ûÓĞ¼ü°´ÏÂ(²»ÊÇ16) 
 257   4                Key_Temp1 = Keyscan();//¶ÁÈ¡°´¼üµÄ±àºÅ 
 258   4                Key_Temp2 = Keyscan();//ÔÙ¶ÁÒ»±é½øĞĞĞ£Ñé 
 259   4                if (Key_Temp1 == 1){//Èç¹ûĞ£ÑéÎŞÎó 
 260   5                  is_playing = 1;
 261   5                  num = 6;
 262   5                  interval = 3;
 263   5                }
 264   4                else if(Key_Temp1 == 2){
 265   5                  is_playing = 1;
 266   5                  num = 14;
 267   5                  interval = 2;
 268   5                }
 269   4                else if(Key_Temp1 == 3){
 270   5                  is_playing = 1;
 271   5                  num = 22;
 272   5                  interval = 1;
 273   5                }
 274   4                else{
 275   5                  Key_Temp1 = 16;
 276   5                }
 277   4              }
 278   3            }
 279   2            else {
 280   3              if (persent_beat == -2) {
 281   4                display(2,8,"Ready");
 282   4                persent_beat++;
 283   4                delay(10);
 284   4              }
 285   3              else if (persent_beat == -1) {
 286   4                display(2,8,"Go");
 287   4                persent_beat++;
 288   4                delay(10);
 289   4              }
 290   3              else {
 291   4                unsigned char persent_delay = 245;
 292   4                unsigned char delay_times = 15;
 293   4                Key_Temp1 = 16;
 294   4      
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 6   

 295   4                
 296   4                for (ii = 1; ii <num+1 ; ii++){
 297   5                  present_row = ii*interval-persent_beat;
 298   5                  if (present_row >= 1 && present_row <= 19){
 299   6                    sprintf(printstr,"%d",row11[ii-1]);
 300   6                    display(1,present_row,printstr);
 301   6                    sprintf(printstr,"%d",row22[ii-1]);
 302   6                    display(2,present_row,printstr);
 303   6                    sprintf(printstr,"%d",row33[ii-1]);
 304   6                    display(3,present_row,printstr);
 305   6                    sprintf(printstr,"%d",row44[ii-1]);
 306   6                    display(4,present_row,printstr);
 307   6                  }
 308   5                }
 309   4                
 310   4                persent_beat++;
 311   4                  
 312   4                while (Key_Temp1 == 16 && persent_delay) {//µ±Ã»ÓĞ°´¼ü±»°´ÏÂ»òÃ»µ½Ê±¼ä 
 313   5                  //Key_Temp3 = Keyscan();//¶ÁÈ¡°´¼üµÄ±àºÅ 
 314   5                  Key_Value = 16;
 315   5                  correct = 0;
 316   5                  --persent_delay;
 317   5                  
 318   5                  if (delay_times > 0 && persent_delay == 1) {
 319   6                    persent_delay = 245;
 320   6                    delay_times--;
 321   6                  }
 322   5                  TR0=0;
 323   5                  
 324   5                  TR1 = 0;//Í£Ö¹¼ÆÊıÆ÷TR1 
 325   5                  Key_Temp1 = Keyscan();//¶ÁÈ¡°´¼üµÄ±àºÅ 
 326   5                  if(Key_Temp1 != 16){//Èç¹ûÓĞ¼ü°´ÏÂ(²»ÊÇ16) 
 327   6                    Key_Temp2 = Keyscan();//ÔÙ¶ÁÒ»±é½øĞĞĞ£Ñé 
 328   6                    if (Key_Temp1 == Key_Temp2){//Èç¹ûĞ£ÑéÎŞÎó 
 329   7                      Key_Value = Key_Temp1;//°´¼ü±àºÅ¸³¸øKey_Value 
 330   7                      
 331   7                      
 332   7                      
 333   7                      FTemp = tab[Key_Value];//¶ÔÓ¦Ô¤ÖÃÊıµÄÖµ¸³¸øFTemp 
 334   7                      TR1 = 1;//Æô¶¯¼ÆÊıÆ÷TR1 
 335   7                      while (Keyscan() < 16);//Ö±µ½ËÉ¿ª°´¼ü 
 336   7                      TR1 = 0;
 337   7                      beep = 1;//SPKÖÃÎª1
 338   7                    }
 339   6                  }
 340   5                  
 341   5                  
 342   5                  
 343   5                  
 344   5                  if (persent_beat > num*interval+1) {
 345   6                    sprintf(printstr1,"score %d",score);
 346   6                    sprintf(printstr2,"total %d",num);
 347   6                    
 348   6                    display(1,2,"Finish!");
 349   6                    display(2,2,printstr1);
 350   6                    display(3,2,printstr2);
 351   6                    display(4,2,"0 to restart");
 352   6                    playmusic();
 353   6      
 354   6                    
 355   6                    score = 0;
 356   6                    persent_beat = -2;
C51 COMPILER V9.54   MUSIC                                                                 03/29/2024 09:30:19 PAGE 7   

 357   6                    is_playing = 0;
 358   6                    delay(15);
 359   6                    break;
 360   6                  } 
 361   5                } 
 362   4                
 363   4                
 364   4                  
 365   4                
 366   4              }
 367   3            }
 368   2            
 369   2            
 370   2          
 371   2      
 372   2          
 373   2        } 
 374   1      }
 375          
 376          void TIM0_ISR() interrupt 1//¶¨Ê±Æ÷T0ÖĞ¶Ï 
 377          {
 378   1        TR0 = 0;//Í£Ö¹¶¨Ê±Æ÷T0 
 379   1        beep = !beep;//±ä·´ 
 380   1        TH0 = Timer0_H;//¼ÆÊıÆ÷Ô¤ÖÃÊı¸ß°ËÎ» 
 381   1        TL0 = Timer0_L;//¼ÆÊıÆ÷Ô¤ÖÃÊıµÍ°ËÎ»
 382   1        TR0 = 1;//Æô¶¯¶¨Ê±Æ÷T0 
 383   1      }
 384          
 385          void T1_INT(void) interrupt 3//¶¨Ê±Æ÷T1ÖĞ¶Ï 
 386          {
 387   1        TR1 = 0;//Í£Ö¹¶¨Ê±Æ÷T1 
 388   1        TL1 = FTemp;//¼ÆÊıÆ÷Ô¤ÖÃÊıµÍ°ËÎ»
 389   1        TH1 = FTemp >> 8;//¼ÆÊıÆ÷Ô¤ÖÃÊı¸ß°ËÎ» 
 390   1        beep = !beep;//±ä·´ 
 391   1        TR1 = 1;//Æô¶¯¶¨Ê±Æ÷T1 
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1486    ----
   CONSTANT SIZE    =    415    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      53
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
